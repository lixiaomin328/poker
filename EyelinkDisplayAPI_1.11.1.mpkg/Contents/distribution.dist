<?xml version="1.0" encoding="UTF-8"?>
<installer-script authoringTool="Packages" authoringToolVersion="1.1.1" authoringToolBuild="2B71" minSpecVersion="1.0">
    <options/>
    <installation-check script="installation_check()"/>
    <!--+==========================+
        |       Presentation       |
        +==========================+-->
    <title>DISTRIBUTION_TITLE</title>
    <readme file="readme.rtf"/>
    <license file="license.rtf"/>
    <!--+==========================+
        |         Installer        |
        +==========================+-->
    <choices-outline>
        <line choice="installer_choice_1"/>
        <line choice="installer_choice_2"/>
        <line choice="installer_choice_3"/>
        <line choice="installer_choice_4"/>
        <line choice="installer_choice_5"/>
        <line choice="installer_choice_6"/>
    </choices-outline>
    <choice id="installer_choice_1" title="EyelinkDisplayAPI" description="">
        <pkg-ref id="com.srresearch.pkg.EyelinkDisplayAPI"/>
    </choice>
    <choice id="installer_choice_2" title="SDL Support Libraries" description="">
        <pkg-ref id="com.srresearch.pkg.SDLSupportLibraries"/>
    </choice>
    <choice id="installer_choice_3" title="pylink2.7" description="">
        <pkg-ref id="com.mygreatcompany.pkg.pylink2.7"/>
    </choice>
    <choice id="installer_choice_4" title="pylink2.6" description="">
        <pkg-ref id="com.mygreatcompany.pkg.pylink2.6"/>
    </choice>
    <choice id="installer_choice_5" title="pylink2.5" description="">
        <pkg-ref id="com.mygreatcompany.pkg.pylink2.5"/>
    </choice>
    <choice id="installer_choice_6" title="pylink3.2" description="">
        <pkg-ref id="com.mygreatcompany.pkg.pylink3.2"/>
    </choice>
    <!--+==========================+
        |    Package References    |
        +==========================+-->
    <pkg-ref id="com.mygreatcompany.pkg.pylink3.2" version="1.0" auth="Root" installKBytes="429">file:./Contents/Packages/pylink3.2.pkg</pkg-ref>
    <pkg-ref id="com.mygreatcompany.pkg.pylink2.5" version="1.0" auth="Root" installKBytes="407">file:./Contents/Packages/pylink2.5.pkg</pkg-ref>
    <pkg-ref id="com.srresearch.pkg.EyelinkDisplayAPI" version="1.0" auth="Root" installKBytes="61137">file:./Contents/Packages/EyelinkDisplayAPI.pkg</pkg-ref>
    <pkg-ref id="com.srresearch.pkg.SDLSupportLibraries" version="1.0" auth="Root" installKBytes="11698">file:./Contents/Packages/SDL%20Support%20Libraries.pkg</pkg-ref>
    <pkg-ref id="com.mygreatcompany.pkg.pylink2.7" version="1.0" auth="Root" installKBytes="422">file:./Contents/Packages/pylink2.7.pkg</pkg-ref>
    <pkg-ref id="com.mygreatcompany.pkg.pylink2.6" version="1.0" auth="Root" installKBytes="406">file:./Contents/Packages/pylink2.6.pkg</pkg-ref>
    <!--+==========================+
        |    JavaScript Scripts    |
        +==========================+-->
    <script>

	const __IC_FLAT_DISTRIBUTION__=false;
	const IC_DISK_TYPE_DESTINATION=0;
	const IC_DISK_TYPE_STARTUP_DISK=1;
	const IC_OS_DISTRIBUTION_TYPE_ANY=0;
	const IC_OS_DISTRIBUTION_TYPE_CLIENT=1;
	const IC_OS_DISTRIBUTION_TYPE_SERVER=2;

	function IC_CheckOS(inDiskType,inMustBeInstalled,inMinimumVersion,inDistributionType)
	{
		var tOSVersion=undefined;
		
		/* Check Minimum Version */
		
		if (inDiskType==IC_DISK_TYPE_DESTINATION)
		{
			if (my.target.systemVersion!=undefined)
			{
				tOSVersion=my.target.systemVersion.ProductVersion;
			}
			
			/* Check if no OS is installed on the potential target */
			
			if (tOSVersion==undefined)
			{
				return (inMustBeInstalled==false);
			}
		}
		else
		{
			tOSVersion=system.version.ProductVersion;
		}
		
		if (system.compareVersions(tOSVersion,inMinimumVersion)==-1)
		{
			return false;
		}
		
		/* Check Distribution Type */
		
		if (inDistributionType!=IC_OS_DISTRIBUTION_TYPE_ANY)
		{
			var tIsServer;
			
			if (inDiskType==IC_DISK_TYPE_DESTINATION)
			{
				tIsServer=system.files.fileExistsAtPath(my.target.mountpoint+'/System/Library/CoreServices/ServerVersion.plist');
			}
			else
			{
				tIsServer=system.files.fileExistsAtPath('/System/Library/CoreServices/ServerVersion.plist');
			}
			
			if (inDistributionType==IC_OS_DISTRIBUTION_TYPE_CLIENT &amp;&amp; tIsServer==true)
			{
				return false;
			}
			
			if (inDistributionType==IC_OS_DISTRIBUTION_TYPE_SERVER &amp;&amp; tIsServer==false)
			{
				return false;
			}
		}
		
		return true;
	}

	function installation_check()
	{
		var tResult;

		tResult=IC_CheckOS(IC_DISK_TYPE_STARTUP_DISK,true,'10.5',IC_OS_DISTRIBUTION_TYPE_ANY);

		if (tResult==false)
		{
			my.result.title = system.localizedStandardStringWithFormat('InstallationCheckError', system.localizedString('DISTRIBUTION_TITLE'));
			my.result.message = ' ';
			my.result.type = 'Fatal';
		}

		return tResult;
	}

    </script>
</installer-script>